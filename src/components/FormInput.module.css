.inputContainer {
  display: flex;
  flex-direction: column;
  max-width: 210px;
  margin-bottom: 10px;
}

.inputLabel {
  margin-bottom: 3px;
  margin-right: 30px;
}

.inputLabel *:not(:last-child) {
  display: block;
  margin-right: 5px;
}

.inputLabel img {
  margin-right: 1px !important;
}

.labelWithIcon {
  max-width: 180px;
  display: flex;
  justify-content: space-between;
}

.labelWithIcon img {
  filter: invert(100%) sepia(0%) saturate(7454%) hue-rotate(36deg)
    brightness(90%) contrast(119%);
}

.isYou.inputLabel img {
  filter: invert(83%) sepia(91%) saturate(351%) hue-rotate(6deg) brightness(94%)
    contrast(94%);
}

.isYou {
  color: #daea4c;
}

.labelKills {
  display: flex;
  align-items: center;
}

.inputContainer select,
.inputContainer input {
  width: 170px;
  background: none;
  border: 1px solid white;
  color: white;
  padding: 8px 10px;
  border-radius: 3px;
  margin-right: 32px;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-transition: background 0.25s linear;
  transition: background 0.25s linear;
}

.inputContainer select option {
  background-color: black;
}

.inputContainer select {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  background-image: url("data:image/svg+xml,%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='451.847px' height='451.847px' viewBox='0 0 451.847 451.847' style='enable-background:new 0 0 451.847 451.847;' xml:space='preserve' fill='%23fff'%3E%3Cg%3E%3Cpath d='M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751 c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0 c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z'/%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  background-size: 0.65em;
  background-position-x: calc(100% - 13px);
  background-position-y: 11px;
  padding-right: 2rem;
  fill: white;
}

.inputContainer input:hover,
.inputContainer select:hover {
  background-color: #444;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
}

ul li {
  color: white;
}

ul li input[type='radio'] {
  position: absolute;
  visibility: hidden;
}

ul li label {
  font-size: 1rem;
  padding: 3px 10px 6px 10px;
  border: 1px white solid;
  z-index: 9;
  cursor: pointer;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear;
}

ul li:first-child label {
  border-radius: 3px 0 0 3px;
}

ul li:last-child label {
  border-radius: 0 3px 3px 0;
}

ul li:hover label {
  background: #444;
}

ul li:hover .check {
  border: 5px solid #ffffff;
}

ul li .check::before {
  display: block;
  position: absolute;
  content: '';
  border-radius: 100%;
  height: 15px;
  width: 15px;
  top: 5px;
  left: 5px;
  margin: auto;
  transition: background 0.25s linear;
  -webkit-transition: background 0.25s linear;
}

input[type='radio']:checked ~ label {
  color: #333;
  background-color: #daea4c;
}

input[type='text']:disabled {
  cursor: not-allowed;
}

input[type='text'].small {
  width: 100px;
  text-align: center;
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 1rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.container .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  border-radius: 3px;
  border: 2px solid white;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #444;
}

/* When the checkbox is checked, add a green background */
.container input:checked ~ .checkmark {
  background-color: #daea4c;
  border: 2px solid #daea4c;
  -webkit-transition: all 0.25s linear;
  transition: all 0.25s linear;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid #444;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.container .checkboxLabel {
  display: flex;
  height: 25px;
  align-items: center;
}
